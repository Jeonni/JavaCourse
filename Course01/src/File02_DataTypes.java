
public class File02_DataTypes {

	public static void main(String[] args) {
		/*
		 * 	데이터 (Data)
		 * 		프로그램에서 다루는 값
		 * 
		 * 	2, '2', "2"
		 * 	→	같은 2 라고 하더라도 컴퓨터는 해당 데이터를 어떻게 사용하느냐에 따라서
		 * 		다르게 작성해줘야 한다.
		 * 	→	어떻게 작성하느냐에 따라서 데이터의 타입이 달라진다.
		 * 
		 * 	자료형 (Data Type)
		 * 		프로그램에서 다루는 데이터의 종류
		 * 		정수, 실수, 문자, 문자열, 논리, 메모리 주소 등이 있다.
		 * 		데이터 외 표현 방식, 저장하는 방식이 다르기 때문에
		 * 		자료형을 통해서 구분한다.
		 */
		System.out.println(2 + 2);
		System.out.println("2" + "2");
		
		/*
		 * 	자료형의 종류
		 * 		기본 자료형
		 * 		boolean		:	논리 타입 (true, false)
		 * 		char			:	문자 타입 (작은 따옴표로 하나의 문자를 표현)
		 * 		byte			:	정수 타입 (1byte 의 저장공간)
		 * 		short			:	정수 타입 (2byte 의 저장공간)
		 * 		int				:	정수 타입 (4byte 의 저장공간, 기본으로 사용)
		 * 		long			:	정수 타입 (8byte 의 저장공간)
		 * 		float			:	실수 타입 (4byte 의 저장공간)
		 * 		double		:	실수 타입 (8byte 의 저장공간, 기본으로 사용)
		 * 
		 *  	참조 타입
		 *  		기본 자료형처럼 크기가 불특정해서 사용할 때마다 원하는 크기만큼 메모리를 할당받아서
		 *  		만들어진 데이터를 참조하기 위한 타입
		 *  		-	배열, 객체 등
		 *  		이때 문자열이 객체에 포함되기 때문에 문자열을 참조 타입의 데이터로 취급한다.
		 *  
		 *  	문자열을 사용하려면 'String 클래스' 타입
		 *  	문자열은 큰 따음표로도 표현을 할 수 있다.
		 */
		
		// console 창에 "Hello World!"라고 출력하라.
		System.out.println("Hello World!");
		System.out.println("이지연");
		
		//	큰 따옴표를 작성하지 않으면 문자열이 아닌 식별자로 인식한다.
		//	따라서 아래의 코드는 오류가 발생한다.
		// System.out.println(Hello World);
		// System.out.println(이지연);
		
		//	위의 두 명령어의 차이는 아래의 말과 같은 차이를 보인다.
		//	홍길동이 안녕하세요. 라고 말했다.
		//	홍길동이 "안녕하세요." 라고 말했다.
	}

}
